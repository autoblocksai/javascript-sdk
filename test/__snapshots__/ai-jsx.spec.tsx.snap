// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ai-jsx handles anthropic chat models 1`] = `
{
  "message": "ai.completion.request",
  "properties": {
    "messages": [
      {
        "content": "What color is the sky?",
        "role": "user",
      },
      {
        "content": "For subsequent replies you will adhere to the following instructions: You are a helpful assistant. Always respond with one word in all lowercase letters and no punctuation.",
        "role": "user",
      },
      {
        "content": "Okay, I will do that.",
        "role": "assistant",
      },
    ],
    "model": "claude-instant-1",
    "provider": "anthropic",
    "spanId": Any<String>,
    "temperature": 0,
  },
  "timestamp": Any<String>,
  "traceId": Any<String>,
}
`;

exports[`ai-jsx handles anthropic chat models 2`] = `
{
  "message": "ai.completion.response",
  "properties": {
    "choices": [
      {
        "message": {
          "content": "blue",
          "role": "assistant",
        },
      },
    ],
    "latency": Any<Number>,
    "provider": "anthropic",
    "spanId": Any<String>,
    "usage": {
      "completion_tokens": 2,
    },
  },
  "timestamp": Any<String>,
  "traceId": Any<String>,
}
`;

exports[`ai-jsx handles errors 1`] = `
{
  "message": "ai.completion.request",
  "properties": {
    "messages": [
      {
        "content": "You are a helpful assistant. Always respond with one word in all lowercase letters and no punctuation.",
        "role": "system",
      },
    ],
    "model": "unsupported-model",
    "provider": "openai",
    "spanId": Any<String>,
    "temperature": 0,
  },
  "timestamp": Any<String>,
  "traceId": Any<String>,
}
`;

exports[`ai-jsx handles errors 2`] = `
{
  "message": "ai.completion.error",
  "properties": {
    "error": "AI.JSX(1032): OpenAI API Error: 404 The model \`unsupported-model\` does not exist.

It's unclear whether this was caused by a bug in AI.JSX, in your code, or is an expected runtime error.
    
Need help? 
* Discord: https://discord.com/channels/1065011484125569147/1121125525142904862
* Docs: https://docs.ai-jsx.com/
* GH: https://github.com/fixie-ai/ai-jsx/issues",
    "latency": Any<Number>,
    "spanId": Any<String>,
  },
  "timestamp": Any<String>,
  "traceId": Any<String>,
}
`;

exports[`ai-jsx handles nested completions 1`] = `
{
  "message": "ai.completion.request",
  "properties": {
    "messages": [
      {
        "content": "You are an expert in colors. Always respond with one word in all lowercase letters and no punctuation.",
        "role": "system",
      },
      {
        "content": "What do you get when you mix red with blue?",
        "role": "user",
      },
    ],
    "model": "gpt-3.5-turbo",
    "provider": "openai",
    "spanId": Any<String>,
    "temperature": 0,
  },
  "timestamp": Any<String>,
  "traceId": Any<String>,
}
`;

exports[`ai-jsx handles nested completions 2`] = `
{
  "message": "ai.completion.response",
  "properties": {
    "choices": [
      {
        "message": {
          "content": "purple",
          "role": "assistant",
        },
      },
    ],
    "latency": Any<Number>,
    "promptTracking": {
      "id": "determine-color-combination",
      "templates": [
        {
          "id": "determine-color-combination/system",
          "template": "You are an expert in colors. Always respond with one word in all lowercase letters and no punctuation.",
        },
        {
          "id": "determine-color-combination/user",
          "template": "What do you get when you mix red with {{ get-thing-color }}?",
        },
      ],
    },
    "provider": "openai",
    "spanId": Any<String>,
    "usage": {
      "completion_tokens": 1,
    },
  },
  "timestamp": Any<String>,
  "traceId": Any<String>,
}
`;

exports[`ai-jsx handles nested completions 3`] = `
{
  "message": "ai.completion.request",
  "properties": {
    "messages": [
      {
        "content": "You are a helpful assistant. Always respond with one word in all lowercase letters and no punctuation.",
        "role": "system",
      },
      {
        "content": "What color is the sky?",
        "role": "user",
      },
    ],
    "model": "gpt-3.5-turbo",
    "parentSpanId": Any<String>,
    "provider": "openai",
    "spanId": Any<String>,
    "temperature": 0,
  },
  "timestamp": Any<String>,
  "traceId": Any<String>,
}
`;

exports[`ai-jsx handles nested completions 4`] = `
{
  "message": "ai.completion.response",
  "properties": {
    "choices": [
      {
        "message": {
          "content": "blue",
          "role": "assistant",
        },
      },
    ],
    "latency": Any<Number>,
    "parentSpanId": Any<String>,
    "promptTracking": {
      "id": "get-thing-color",
      "templates": [
        {
          "id": "get-thing-color/system",
          "template": "You are a helpful assistant. Always respond with one word in all lowercase letters and no punctuation.",
        },
        {
          "id": "get-thing-color/user",
          "template": "What color is the {{ thing }}?",
        },
      ],
    },
    "provider": "openai",
    "spanId": Any<String>,
    "usage": {
      "completion_tokens": 1,
    },
  },
  "timestamp": Any<String>,
  "traceId": Any<String>,
}
`;

exports[`ai-jsx handles nested completions w/o tracking IDs 1`] = `
{
  "message": "ai.completion.request",
  "properties": {
    "messages": [
      {
        "content": "You are an expert in colors. Always respond with one word in all lowercase letters and no punctuation.",
        "role": "system",
      },
      {
        "content": "What do you get when you mix red with blue?",
        "role": "user",
      },
    ],
    "model": "gpt-3.5-turbo",
    "provider": "openai",
    "spanId": Any<String>,
    "temperature": 0,
  },
  "timestamp": Any<String>,
  "traceId": Any<String>,
}
`;

exports[`ai-jsx handles nested completions w/o tracking IDs 2`] = `
{
  "message": "ai.completion.response",
  "properties": {
    "choices": [
      {
        "message": {
          "content": "purple",
          "role": "assistant",
        },
      },
    ],
    "latency": Any<Number>,
    "provider": "openai",
    "spanId": Any<String>,
    "usage": {
      "completion_tokens": 1,
    },
  },
  "timestamp": Any<String>,
  "traceId": Any<String>,
}
`;

exports[`ai-jsx handles nested completions w/o tracking IDs 3`] = `
{
  "message": "ai.completion.request",
  "properties": {
    "messages": [
      {
        "content": "You are a helpful assistant. Always respond with one word in all lowercase letters and no punctuation.",
        "role": "system",
      },
      {
        "content": "What color is the sky?",
        "role": "user",
      },
    ],
    "model": "gpt-3.5-turbo",
    "parentSpanId": Any<String>,
    "provider": "openai",
    "spanId": Any<String>,
    "temperature": 0,
  },
  "timestamp": Any<String>,
  "traceId": Any<String>,
}
`;

exports[`ai-jsx handles nested completions w/o tracking IDs 4`] = `
{
  "message": "ai.completion.response",
  "properties": {
    "choices": [
      {
        "message": {
          "content": "blue",
          "role": "assistant",
        },
      },
    ],
    "latency": Any<Number>,
    "parentSpanId": Any<String>,
    "provider": "openai",
    "spanId": Any<String>,
    "usage": {
      "completion_tokens": 1,
    },
  },
  "timestamp": Any<String>,
  "traceId": Any<String>,
}
`;

exports[`ai-jsx handles placeholders 1`] = `
{
  "message": "ai.completion.request",
  "properties": {
    "messages": [
      {
        "content": "You are a helpful assistant. Always respond with one word in all lowercase letters and no punctuation.",
        "role": "system",
      },
      {
        "content": "What color is the sky?",
        "role": "user",
      },
    ],
    "model": "gpt-3.5-turbo",
    "provider": "openai",
    "spanId": Any<String>,
    "temperature": 0,
  },
  "timestamp": Any<String>,
  "traceId": Any<String>,
}
`;

exports[`ai-jsx handles placeholders 2`] = `
{
  "message": "ai.completion.response",
  "properties": {
    "choices": [
      {
        "message": {
          "content": "blue",
          "role": "assistant",
        },
      },
    ],
    "latency": Any<Number>,
    "promptTracking": {
      "id": "my-tracker-id",
      "templates": [
        {
          "id": "my-tracker-id/system",
          "template": "You are a helpful assistant. Always respond with one word in all lowercase letters and no punctuation.",
        },
        {
          "id": "my-tracker-id/user",
          "template": "What color is the {{ thing }}?",
        },
      ],
    },
    "provider": "openai",
    "spanId": Any<String>,
    "usage": {
      "completion_tokens": 1,
    },
  },
  "timestamp": Any<String>,
  "traceId": Any<String>,
}
`;

exports[`ai-jsx works with no tracker id 1`] = `
{
  "message": "ai.completion.request",
  "properties": {
    "messages": [
      {
        "content": "You are a helpful assistant. Always respond with one word in all lowercase letters and no punctuation.",
        "role": "system",
      },
      {
        "content": "What color is the sky?",
        "role": "user",
      },
    ],
    "model": "gpt-3.5-turbo",
    "provider": "openai",
    "spanId": Any<String>,
    "temperature": 0,
  },
  "timestamp": Any<String>,
  "traceId": Any<String>,
}
`;

exports[`ai-jsx works with no tracker id 2`] = `
{
  "message": "ai.completion.response",
  "properties": {
    "choices": [
      {
        "message": {
          "content": "blue",
          "role": "assistant",
        },
      },
    ],
    "latency": Any<Number>,
    "provider": "openai",
    "spanId": Any<String>,
    "usage": {
      "completion_tokens": 1,
    },
  },
  "timestamp": Any<String>,
  "traceId": Any<String>,
}
`;
